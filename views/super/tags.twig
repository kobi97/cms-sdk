{% extends 'index_new.twig' %}

{% block title %}
  어드민 태그 관리
{% endblock %}

{% block script %}
  <script>
    var global_tag_id;

    require(['jquery', 'select2'], function ($) {
      $(function () {
        // 태그 목록 컬럼 변동 시 check
        $('#updateForm input[type=text], #updateForm select').change(function () {
          $(this).parents('tr').find('input[type=checkbox]').attr('checked', 'checked');
        });

        // 태그 목록 수정
        $('#updateBtn').click(function () {
          var container = '';
          $('#updateForm input:checked').each(function (i) {
            var id = $(this).parents('tr').find('input[name=id]').val();
            var name = $(this).parents('tr').find('input[name=name]').val();
            var is_use = $(this).parents('tr').find('select[name=is_use]').val();

            container += '<input type="text" name="tag_list[' + i + '][id]" value="' + id + '" />';
            container += '<input type="text" name="tag_list[' + i + '][name]" value="' + name + '" />';
            container += '<input type="text" name="tag_list[' + i + '][is_use]" value="' + is_use + '" />';

          });
          container += '<input type="text" name="command" value="update" />\n';

          $.post('/super/tag_action.ajax', $('<form />').append(container).serializeArray(), function (returnData) {
            if (returnData.success) {
              alert(returnData.msg);
              window.location.reload();
            } else {
              alert(returnData.msg);
            }
          }, 'json');
        });

        var tag_menu_select = $("#tag_menu_select");
        tag_menu_select.select2().change(function (e) {
          if (e.added) {
            // 권한 선택 시
            fn_executeTagMenu(e.added.id, 'mapping_tag_menu')
          } else if (e.removed) {
            // 선택된 권한 삭제 시
            if (confirm("삭제하시겠습니까?")) {
              fn_executeTagMenu(e.removed.id, 'delete_tag_menu');
            }
          }
        });

        $('#js_delete').click(() => {
          if (!confirm('선택한 항목들을 삭제하시겠습니까?')) {
            return;
          }

          $('#updateForm input:checked').map((i, e) => {

            const $tr = $(e).parents('tr');
            const tagId = $tr.find('input[name=id]').val();

            $.ajax({
              url: '/super/tags/' + tagId,
              type: 'DELETE'
            }).done((result) => {
              if (result.success) {
                $tr.detach();
              }
            });
          });
        });
      });
    });

    function fn_showMapping(tag_id) {
      $.post('/super/tag_action.ajax', { 'id': tag_id, 'command': 'show_mapping' }, function (returnData) {
        if (!returnData.success) {
          alert(returnData.msg);
          return;
        }

        global_tag_id = tag_id;

        $("#updateForm tr").attr("class", "");
        $("#tag_tr_" + tag_id).attr("class", "info");
        $("#tag_menu_div").modal();


        const admins = returnData.data.admins;
        const admins_html = admins.map(function (admin) {
          return `<span><a class="label label-default" href="/super/user_detail?id=${admin.id}" target="_blank">${admin.name}</a></span>`;
        }).join(' ');

        $('#tag_admins').html(admins_html);

        const menus = returnData.data.menus;
        const menus_html = menus.map(function (menu) {
          var menu_url_array = menu['menu_url'].split('#');

          var html = '<option value=" ' + menu['id'] + ' " ';
          if (menu['selected'] == 'selected') {
            html += ' selected="selected" ';
          }
          html += '>';
          html += menu['menu_title'];
          html += (menu_url_array[1] ? '#' + menu_url_array[1] : '');
          html += '</option>';
          return html;
        }).join('');

        const tag_menu_select = $("#tag_menu_select");
        tag_menu_select.html(menus_html);
        tag_menu_select.select2();

      }, 'json');
    }

    // Tag에 Menu 등록 / 삭제 한다.
    function fn_executeTagMenu(menu_id, command) {
      var jsonArray = {
        'tag_id': global_tag_id,
        'menu_id': menu_id,
        'command': command
      };
      $.post('/super/tag_action.ajax', jsonArray, function (returnData) {
        if (!returnData.success) {
          alert(returnData.msg);
        }
      }, 'json');
    }
  </script>
{% endblock %}
{% block body %}
  <h4>태그 등록</h4>
  <form class="clearfix" method="POST">
    <input type="hidden" id="command" name="command"/>
    <table class="table table-bordered">
      <colgroup>
        <col width="200"/>
        <col width="80"/>
      </colgroup>
      <thead>
      <tr>
        <th>태그 이름</th>
        <th>사용 여부</th>
      </tr>
      </thead>
      <tbody>
      <tr>
        <td><input type="text" class="input-block-level" name="name"/></td>
        <td>
          <select class="input-block-level" name="is_use">
            <option value="1">Y</option>
            <option value="0">N</option>
          </select>
        </td>
      </tr>
      </tbody>
    </table>
    <div class="pull-right">
      <button type="submit" class="btn btn-primary"><i class="icon-file"></i> 저장</button>
    </div>
  </form>

  <h4>태그 목록</h4>
  <form id="updateForm" class="form-horizontal form-inline">
    <table class="table table-bordered">
      <colgroup>
        <col width="20"/>
        <col width="20"/>
        <col width=""/>
        <col width="80"/>
        <col width="80"/>
        <col width="80"/>
        <col width="80"/>
        <col width="80"/>
        <col width="80"/>
        <col width="80"/>
      </colgroup>
      <thead>
      <tr>
        <th></th>
        <th>ID</th>
        <th>태그 이름</th>
        <th>생성자</th>
        <th>사용 여부</th>
        <th>최초 생성일</th>
        <th>최근 수정일</th>
        <th>포함된 메뉴</th>
        <th>사용 유저 수</th>
        <th></th>
      </tr>
      </thead>
      <tbody>
      {% for tag in tags %}
        <tr id="tag_tr_{{ tag.id }}" {% if tag.is_use == 0 %}class="danger"{% endif %}>
          <td>
            <input type="checkbox">
            <input type="hidden" name="id" value="{{ tag.id }}"/>
          </td>
          <td>{{ tag.id }}</td>
          <td><input type="text" class="input-block-level" name="name" value="{{ tag.name }}"/></td>
          <td>{{ tag.creator }}</td>
          <td>
            <select class="input-block-level" name="is_use">
              <option value="1" {% if tag.is_use == 1 %}selected="selected"{% endif %}>Y</option>
              <option value="0" {% if tag.is_use == 0 %}selected="selected"{% endif %}>N</option>
            </select>
          </td>
          <td>{{ tag.created_at }}</td>
          <td>{{ tag.updated_at }}</td>
          <td>{{ tag.menus_count }}</td>
          <td>{{ tag.users_count }}</td>
          <td>
            <button type="button" class="btn btn-default btn-sm" onclick="fn_showMapping('{{ tag.id }}')"><i class="icon-forward"></i> 보기</button>
          </td>
        </tr>
      {% endfor %}
      </tbody>
    </table>
    <div>
      <div class="pull-right">
        <button type="button" class="btn btn-danger" id="js_delete">삭제</button>
        <button type="button" class="btn btn-primary" id="updateBtn">저장</button>
      </div>
    </div>
  </form>

  <div id="tag_menu_div" class="modal fade">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title">태그 관리</h4>
        </div>
        <div class="modal-body">
          <ul id="tag_admins"></ul>
          <hr>
          <select id="tag_menu_select" class="input-block-level" multiple data-placeholder="권한 추가하기"></select>
        </div>
      </div>
    </div>
  </div>
{% endblock %}
